apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: mattermost
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: Mattermost Login
      clientId: uds-swf-mattermost
      redirectUris:
        - "https://{{ .Values.subdomain }}.{{ .Values.domain }}/*"
      defaultClientScopes:
        {{ if eq .Values.sso.protocol "gitlab" }}
        - "mapper-oidc-username-username"
        - "mapper-oidc-mattermostid-id"
        - "mapper-oidc-email-email"
        {{ end }}
        {{ if eq .Values.sso.protocol "openid_connect" }}
        - "profile"
        - "email"
        {{ end }}

      secretName: {{ .Values.sso.secretName }}
      secretTemplate:
        {{ if eq .Values.sso.protocol "gitlab" }}
        MM_GITLABSETTINGS_ENABLE: "{{ .Values.sso.enabled | toString }}"
        MM_GITLABSETTINGS_ID: "clientField(clientId)"
        MM_GITLABSETTINGS_SECRET: "clientField(secret)"
        MM_GITLABSETTINGS_AUTHENDPOINT: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/auth"
        MM_GITLABSETTINGS_TOKENENDPOINT: "http://keycloak-http.keycloak.svc.cluster.local:8080/realms/uds/protocol/openid-connect/token"
        MM_GITLABSETTINGS_USERAPIENDPOINT: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/userinfo"
        {{ end }}
        {{ if eq .Values.sso.protocol "openid_connect" }}
        MM_OPENIDSETTINGS_ENABLE: "{{ .Values.sso.enabled | toString }}"
        MM_OPENIDSETTINGS_BUTTONTEXT: "{{ .Values.sso.login_button_text }}"
        MM_OPENIDSETTINGS_BUTTONCOLOR: "{{ .Values.sso.login_button_color }}"
        MM_OPENIDSETTINGS_DISCOVERYENDPOINT: "https://sso.{{ .Values.domain }}/realms/uds/.well-known/openid-configuration"
        MM_OPENIDSETTINGS_ID: "clientField(clientId)"
        MM_OPENIDSETTINGS_SECRET: "clientField(secret)"
        {{ end }}
        MM_EMAILSETTINGS_ENABLESIGNUPWITHEMAIL: "{{ .Values.sso.enable_sign_up_with_email | toString }}"
        MM_EMAILSETTINGS_ENABLESIGNINWITHEMAIL: "{{ .Values.sso.enable_sign_in_with_email | toString }}"
        MM_EMAILSETTINGS_ENABLESIGNINWITHUSERNAME: "{{ .Values.sso.enable_sign_in_with_username | toString }}"
  {{- end }}
  monitor:
    - selector:
        app.kubernetes.io/name: mattermost-enterprise-edition
      targetPort: 8067
      portName: mattermost-app-metrics
      description: Metrics

  network:
    expose:
      - service: mattermost-enterprise-edition
        selector:
          app.kubernetes.io/name: mattermost-enterprise-edition
        gateway: tenant
        host: {{ .Values.subdomain }}
        port: 8065
    allow:
      # Permit intra-namespace communication for job communications
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteNamespace: keycloak
        remoteSelector:
          app.kubernetes.io/name: keycloak
        selector:
          app.kubernetes.io/name: mattermost-enterprise-edition
        port: 8080
        description: "SSO Internal"

      - direction: Egress
        remoteGenerated: Anywhere
        selector:
          app.kubernetes.io/name: mattermost-enterprise-edition
        port: 443
        description: "SSO External"

      - direction: Egress
        selector:
          app.kubernetes.io/name: mattermost-enterprise-edition
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Mattermost Storage"

      - direction: Egress
        selector:
          app.kubernetes.io/name: mattermost-enterprise-edition
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Mattermost Postgres"

      # Custom rules for unanticipated scenarios
      {{- range .Values.custom }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
